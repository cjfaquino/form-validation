(()=>{var n={426:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,":root {\n  --main-color: black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n  background-color: rgb(21, 21, 21);\n}\n\nmain {\n  height: min-content;\n}\n\nform {\n  height: 100%;\n  padding: 10px;\n  background-color: var(--main-color);\n  color: white;\n  padding-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\nlabel {\n  text-align: left;\n}\n\nselect {\n  appearance: none;\n}\n\n\ninput,\nselect {\n  font: inherit;\n  padding: 5px 10px;\n  height: 50px;\n  width: 100%;\n  border: 1px solid rgb(83, 83, 83);\n  border-radius: 3px;\n  background-color: var(--main-color);\n  color: white;\n\n}\n\ninput.active,\nselect.active {\n  border: 1px solid rgb(180, 0, 0);\n}\n\ninput:focus,\nselect:focus {\n  border: 1px solid white;\n  outline: none;\n}\n\nlabel[for='zip-code'].disabled {\n  color: rgb(75, 75, 75);\n}\n\ninput:disabled {\n  background-color: rgba(58, 58, 58, 0.568);\n}\n\nbutton {\n  margin-top: 50px;\n  font: inherit;\n  padding: 5px;\n  width: 100%;\n  height: 50px;\n  background-color: var(--main-color);\n  border: 1px solid white;\n  border-radius: 3px;\n  color: white;\n  font-weight: 700;\n}\n\n#zip-code {\n  width: 100px;\n  text-align: center;\n}\n\n.error.active {\n  margin-top: 5px;\n  display: inline-block;\n  color: red;\n  font-size: .8rem;\n  width: 100%;\n}\n\n.input-item {\n  margin: 10px 0;\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  font-size: 1.3rem;\n}\n\n@media only screen and (min-width: 610px) {\n  form {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding-top: 50px;\n  }\n\n  label {\n    text-align: right;\n    padding-right: 5px;\n  }\n\n  button {\n    width: 200px;\n    font-size: 1.2rem;\n    align-self: flex-end;\n    height: 50px;\n    margin-right: 200px;\n  }\n\n  .input-item {\n    grid-template-columns: 200px 1fr 200px;\n    grid-template-rows: 70px;\n    align-items: center;\n  }\n\n  .error.active {\n    margin: 0;\n    padding: 0 20px;\n  }\n\n  label {\n    font-size: 1rem;\n  }\n\n  input,\n  select,\n  button {\n    height: 40px;\n    font-size: 1rem;\n  }\n}\n\n@media only screen and (min-width: 900px) {\n  main {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n  }\n\n  form {\n    width: 900px;\n    padding: 50px;\n  }\n\n  button {\n    height: 50px;\n  }\n}\n\n@media only screen and (min-width: 1400px) {\n  form {\n    padding-top: 100px;\n  }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,yCAAyC;EACzC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,iCAAiC;AACnC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mCAAmC;EACnC,YAAY;EACZ,oBAAoB;EACpB,uLAAuL;AACzL;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;;AAGA;;EAEE,aAAa;EACb,iBAAiB;EACjB,YAAY;EACZ,WAAW;EACX,iCAAiC;EACjC,kBAAkB;EAClB,mCAAmC;EACnC,YAAY;;AAEd;;AAEA;;EAEE,gCAAgC;AAClC;;AAEA;;EAEE,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,mCAAmC;EACnC,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,qBAAqB;EACrB,UAAU;EACV,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,cAAc;EACd,aAAa;EACb,0BAA0B;EAC1B,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE;IACE,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;IACjB,kBAAkB;EACpB;;EAEA;IACE,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;IACpB,YAAY;IACZ,mBAAmB;EACrB;;EAEA;IACE,sCAAsC;IACtC,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,SAAS;IACT,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;;;IAGE,YAAY;IACZ,eAAe;EACjB;AACF;;AAEA;EACE;IACE,YAAY;IACZ,aAAa;IACb,uBAAuB;EACzB;;EAEA;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,kBAAkB;EACpB;AACF",sourcesContent:[":root {\n  --main-color: black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n  background-color: rgb(21, 21, 21);\n}\n\nmain {\n  height: min-content;\n}\n\nform {\n  height: 100%;\n  padding: 10px;\n  background-color: var(--main-color);\n  color: white;\n  padding-bottom: 30px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\nlabel {\n  text-align: left;\n}\n\nselect {\n  appearance: none;\n}\n\n\ninput,\nselect {\n  font: inherit;\n  padding: 5px 10px;\n  height: 50px;\n  width: 100%;\n  border: 1px solid rgb(83, 83, 83);\n  border-radius: 3px;\n  background-color: var(--main-color);\n  color: white;\n\n}\n\ninput.active,\nselect.active {\n  border: 1px solid rgb(180, 0, 0);\n}\n\ninput:focus,\nselect:focus {\n  border: 1px solid white;\n  outline: none;\n}\n\nlabel[for='zip-code'].disabled {\n  color: rgb(75, 75, 75);\n}\n\ninput:disabled {\n  background-color: rgba(58, 58, 58, 0.568);\n}\n\nbutton {\n  margin-top: 50px;\n  font: inherit;\n  padding: 5px;\n  width: 100%;\n  height: 50px;\n  background-color: var(--main-color);\n  border: 1px solid white;\n  border-radius: 3px;\n  color: white;\n  font-weight: 700;\n}\n\n#zip-code {\n  width: 100px;\n  text-align: center;\n}\n\n.error.active {\n  margin-top: 5px;\n  display: inline-block;\n  color: red;\n  font-size: .8rem;\n  width: 100%;\n}\n\n.input-item {\n  margin: 10px 0;\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  font-size: 1.3rem;\n}\n\n@media only screen and (min-width: 610px) {\n  form {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding-top: 50px;\n  }\n\n  label {\n    text-align: right;\n    padding-right: 5px;\n  }\n\n  button {\n    width: 200px;\n    font-size: 1.2rem;\n    align-self: flex-end;\n    height: 50px;\n    margin-right: 200px;\n  }\n\n  .input-item {\n    grid-template-columns: 200px 1fr 200px;\n    grid-template-rows: 70px;\n    align-items: center;\n  }\n\n  .error.active {\n    margin: 0;\n    padding: 0 20px;\n  }\n\n  label {\n    font-size: 1rem;\n  }\n\n  input,\n  select,\n  button {\n    height: 40px;\n    font-size: 1rem;\n  }\n}\n\n@media only screen and (min-width: 900px) {\n  main {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n  }\n\n  form {\n    width: 900px;\n    padding: 50px;\n  }\n\n  button {\n    height: 50px;\n  }\n}\n\n@media only screen and (min-width: 1400px) {\n  form {\n    padding-top: 100px;\n  }\n}"],sourceRoot:""}]);const A=a},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=r(n,o),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},119:()=>{document.addEventListener("DOMContentLoaded",(()=>{const n=document.getElementById("country");fetch("https://restcountries.com/v2/all").then((n=>n.json())).then((e=>{let t="";e.forEach((n=>{t+=`<option>${n.name}</option>`})),n.insertAdjacentHTML("beforeend",t)})).catch((n=>console.log(n)))}))}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),s=t.n(A),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,t(119);const g=document.getElementById("password"),h=document.querySelector("form"),C=h.querySelectorAll("input"),x=h.querySelector("#country"),E=h.querySelector("#password"),f=h.querySelector("#password-confirm"),b=document.querySelector("#zip-code"),v=h.querySelector("label[for='zip-code']"),B=n=>n.nextElementSibling,y=n=>{const e=B(n);e.className="error active",n.className="active","email"===n.name?((n,e)=>{n.validity.valueMissing?e.textContent="You need to enter an e-mail address.":n.validity.typeMismatch?e.textContent="Entered value needs to be an e-mail address.":n.validity.tooShort&&(e.textContent=`Email should be at least ${n.minLength} characters; you entered ${n.value.length}.`)})(n,e):"country"===n.name?((n,e)=>{""===n.value&&(e.textContent="Please choose a country")})(n,e):"zip-code"===n.name?((n,e)=>{n.validity.valueMissing?e.textContent="You need to enter a zip code.":n.validity.typeMismatch||n.validity.badInput||n.validity.patternMismatch?e.textContent="Entered value needs to be a 5 digit number.":n.validity.tooShort||n.validity.rangeUnderflow?e.textContent=`Zip code should be at least ${n.minLength} characters.`:(n.validity.tooLong||n.validity.rangeOverflow)&&(e.textContent=`Zip code should be no more than ${n.maxLength} characters.`)})(n,e):"password"===n.name?((n,e)=>{n.validity.valueMissing?e.textContent="You need to enter a password.":(n.validity.typeMismatch||n.validity.badInput||n.validity.patternMismatch)&&(e.textContent="Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character.")})(n,e):"password-confirm"===n.name&&((n,e)=>{n.validity.valueMissing?e.textContent="Please re-enter password here.":n.value!==g.value&&(e.textContent="Passwords do not match.")})(n,e)},w=n=>{const e=B(n);return()=>{!n.validity.valid||E.value!==f.value&&f.value?y(n):(e.textContent="",e.className="error",n.className="")}};C.forEach((n=>{n.addEventListener("input",w(n))})),x.addEventListener("change",w(x)),x.addEventListener("change",(()=>{"United States of America"===x.value?(b.disabled=!1,v.className=""):(b.disabled=!0,v.className="disabled")})),h.addEventListener("submit",(n=>{""===x.value&&(y(x),n.preventDefault()),C.forEach((e=>{e.validity.valid||(y(e),n.preventDefault())})),h.checkValidity()&&alert("High five! It cleared.")}));const I=document.querySelector("form"),Y=I.querySelector("#zip-code"),k=I.querySelector("label[for='zip-code']"),S=I.querySelector("#password");Y.minLength=5,Y.maxLength=5,Y.pattern="[0-9]*",Y.disabled=!0,k.className="disabled",S.pattern="^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$"})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,